when a request is made for an unknown route:
    proxy the request for the user and then fetch the content from the masternode and convert it to gladius template format. fetch linked resources as well.
    notify the p2p network that there is new content that needs to be cached by edge nodes.
    add a route(or routes) entry in the cache but leave the seeders field empty. this will cause subsequent requests to be proxied until the content is distributed and network state refreshed with which nodes have this content.
    continue proxying the requests for the same resource until the next network state refresh provides the nodes that are hosting the content.


(done) when updating the network and content state:
    (done) ask controld for map of which nodes have what files
    (done) lookup file in the cache by host and file hash (name) to see if it exists. if so, recreate the kd-tree. if it does not exist, ignore it


node failover:
    need some kind of list in the iframe to store possible nodes to retry fetching content from if a request fails


    !!! subsequent asset requests after the initial html page load need a way to have a list of failover seed nodes that have the desired content as well
        -might have to lookup all of these nodes per asset on the initial page render